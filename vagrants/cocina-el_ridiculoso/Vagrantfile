Vagrant::Config.run do |config|
  # ===========================================================================
  #
  # Node Identity
  #
  # You shouldn't need to mess with anything but this section

  # cloud we're targeting
  cluster          = 'cocina'
  facet            = 'el_ridiculoso'
  facet_index      = '0'
  node_name        = "#{cluster}-#{facet}-#{facet_index}"
  host_network_ip  = "33.33.33.22"
  chef_server_url = "http://33.33.33.20:4000"
  chef_environment = "vm_dev"

  # ===========================================================================
  #
  # Configure VM
  #

  # box to build off of.
  config.vm.box = "ironfan-natty"

  # Boot with a GUI so you can see the screen. (Default is headless)
  config.vm.boot_mode = :gui

  # Host only network IP lets you access it via the IP.
  config.vm.network  host_network_ip

  # Mount this to see all our chefs and stuff: [type, vm_path, host_path]
  config.vm.share_folder "homebase", "/cloud",    "../.."
  config.vm.share_folder "chef",     "/etc/chef", "../../knife/#{cluster}"

  config.vm.customize do |vm|
    # Name the VM
    vm.name        = node_name
    # Bump up the memory
    vm.memory_size = 640
    # Use the host resolver for DNS so that VPN continues to work within the VM
    vm.network_adapters.each do |na|
      if na.enabled? && na.nat_driver
        na.nat_driver.dns_use_host_resolver = true
      end
    end
  end

  # ===========================================================================
  #
  # Provision with chef
  #

  # Enable provisioning with chef solo, specifying a cookbooks path (relative
  # to this Vagrantfile), and adding some recipes and/or roles.
  #
  config.vm.provision :chef_client do |chef|
    #
    chef.node_name         = node_name
    #
    # chef.provisioning_path = '/etc/chef'
    chef.chef_server_url   = chef_server_url
    chef.validation_client_name = "#{cluster}-validator"
    chef.validation_key_path = File.expand_path("../../knife/#{cluster}/#{cluster}-validator.pem", File.dirname(__FILE__))
    chef.client_key_path     = File.expand_path("../../knife/#{cluster}/client_keys/client-#{node_name}.pem", File.dirname(__FILE__))
    chef.environment         = chef_environment
    #
    chef.add_role         :base_role
    chef.add_role         :chef_client
    chef.add_role         :ssh
    chef.add_role       :nfs_client
    #
    chef.add_recipe       'cloud_utils::virtualbox_metadata'
    chef.add_role         :volumes
    chef.add_role         :package_set
    chef.add_role         :dashboard
    #

    chef.add_role         :hadoop
    chef.add_role         :hadoop_s3_keys
    chef.add_recipe       'hadoop_cluster::cluster_conf'
    chef.add_role         :tuning
    chef.add_role         :cassandra_server
    chef.add_role         :elasticsearch_data_esnode
    chef.add_role         :elasticsearch_http_esnode
    chef.add_role         :zookeeper_server
    chef.add_role         :flume_master
    chef.add_role         :flume_agent
    chef.add_role         :ganglia_master
    chef.add_role         :ganglia_agent
    chef.add_role         :hadoop_namenode
    chef.add_role         :hadoop_datanode
    chef.add_role         :hadoop_jobtracker
    chef.add_role         :hadoop_secondarynn
    chef.add_role         :hadoop_tasktracker
    chef.add_role         :hbase_master
    chef.add_role         :hbase_regionserver
    chef.add_role         :hbase_stargate
    chef.add_role         :redis_server

    chef.add_role         :mysql_client
    chef.add_role         :redis_client
    chef.add_role         :cassandra_client
    chef.add_role         :elasticsearch_client
    chef.add_role         :nfs_client
    chef.add_role         :jruby
    chef.add_role         :pig

    #
    # more shit to install
    #
    chef.add_recipe       'ant'
    chef.add_recipe       'bluepill'
    chef.add_recipe       'boost'
    chef.add_recipe       'build-essential'
    chef.add_recipe       'cron'
    chef.add_recipe       'git'
    chef.add_recipe       'hive'
    chef.add_recipe       'java::sun'
    chef.add_recipe       'jpackage'
    chef.add_recipe       'jruby'
    chef.add_recipe       'nodejs'
    chef.add_recipe       'ntp'
    chef.add_recipe       'openssh'
    chef.add_recipe       'openssl'
    chef.add_recipe       'rstats'
    chef.add_recipe       'runit'
    chef.add_recipe       'thrift'
    chef.add_recipe       'xfs'
    chef.add_recipe       'xml'
    chef.add_recipe       'zabbix'
    chef.add_recipe       'zlib'

    #
    # These run stuff
    #
    chef.add_recipe       'apache2'
    chef.add_recipe       'nginx'

    # role                :statsd_server
    # role                :mongodb_server
    # role                :mysql_server
    # role                :graphite_server
    # role                :resque_server

    chef.json = {
      "cluster_name"    => cluster,
      "facet_name"      => facet,
      "facet_index"     => facet_index,
      #
      "nfs" => { "mounts" => [
          ["/home/#{ENV['USER']}", { "owner" => ENV['USER'], "remote_path" => ENV['HOME'] } ],
        ] },
      "package_set" => {
        "install"       => [ "base", "dev", "sysadmin", "text", "vagrant", "ironfan" ],
        "gems"          => { "ironfan" => %w[ ironfan ] }
      },
      "tuning"          => { "swappiness" => "60", "overcommit_memory" => "1", "overcommit_ratio" => "100" },
      "java"            => { "install_flavor" =>"sun" },
      "apt"             => { "cloudera" => { "force_distro" => "maverick" } },
      "volumes" => {
        "root"          => { "tags" => { "scratch" => true }, "mount_point" => "/", "device" => "/dev/mapper/natty--base-root", "mountable" => false }
      },
      :cassandra      => {
        :server       => { :run_state => :stop  }, },
      :dashpot        => {
        :dashboard    => { :run_state => :stop  }, },
      :elasticsearch  => {
        :server       => { :run_state => :stop  }, },
      :flume          => {
        :master       => { :run_state => :stop  },
        :node         => { :run_state => :stop  }, },
      :ganglia        => {
        :server       => { :run_state => :stop },
        :monitor      => { :run_state => :stop }, },
      :graphite       => {
        :carbon       => { :run_state => :stop  },
        :whisper      => { :run_state => :stop  },
        :dashboard    => { :run_state => :stop  }, },
      :hadoop         => {
        :namenode     => { :run_state => :stop  },
        :secondarynn  => { :run_state => :stop  },
        :jobtracker   => { :run_state => :stop  },
        :datanode     => { :run_state => :stop  },
        :tasktracker  => { :run_state => :stop  }, },
      :hbase          => {
        :master       => { :run_state => :stop  },
        :regionserver => { :run_state => :stop  },
        :stargate     => { :run_state => :stop  }, },
      :mongodb        => {
        :server       => { :run_state => :stop  }, },
      :mysql          => {
        :server       => { :run_state => :stop  }, },
      :redis          => {
        :server       => { :run_state => :stop  }, },
      :resque         => {
        :server       => { :run_state => :stop  }, },
      :statsd         => {
        :server       => { :run_state => :stop  }, },
      :zookeeper      => {
        :server       => { :run_state => :stop  }, },

    }
  end

end
